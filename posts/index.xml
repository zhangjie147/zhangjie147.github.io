<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on 张杰的博客</title>
		<link>https://zhangjie174.com/posts/</link>
		<description>Recent content in Posts on 张杰的博客</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>cn-zh</language>
		<copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
		<lastBuildDate>Mon, 04 Nov 2019 17:25:12 +0800</lastBuildDate>
		<atom:link href="https://zhangjie174.com/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>UE4-多人联机-Replicate</title>
			<link>https://zhangjie174.com/posts/ue4-%E5%A4%9A%E4%BA%BA%E8%81%94%E6%9C%BA-replicate/</link>
			<pubDate>Mon, 04 Nov 2019 17:25:12 +0800</pubDate>
			
			<guid>https://zhangjie174.com/posts/ue4-%E5%A4%9A%E4%BA%BA%E8%81%94%E6%9C%BA-replicate/</guid>
			<description>UE4 C++ Replicate 方法 Replicate 变量 在.h内 将变量声明 Replicated UPROPERTY(Replicated) 类名* 变量; 在.cpp内 加入方法GetLifetimeReplicatedProps #include &amp;lt;Net/UnrealNetwork.h&amp;gt; void 类名::Ge</description>
			<content type="html"><![CDATA[

<h2 id="ue4-c-replicate-方法">UE4 C++ Replicate 方法</h2>

<h3 id="replicate-变量">Replicate 变量</h3>

<ul>
<li>在.h内

<ul>
<li>将变量声明 Replicated</li>
</ul></li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-C++" data-lang="C++"><span class="n">UPROPERTY</span><span class="p">(</span><span class="n">Replicated</span><span class="p">)</span>
<span class="err">类名</span><span class="o">*</span> <span class="err">变量</span><span class="p">;</span>
</code></pre></div>
<ul>
<li>在.cpp内

<ul>
<li>加入方法GetLifetimeReplicatedProps</li>
</ul></li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-C++" data-lang="C++"><span class="cp">#include</span> <span class="cpf">&lt;Net/UnrealNetwork.h&gt;</span><span class="cp">
</span><span class="cp"></span>
<span class="kt">void</span> <span class="err">类名</span><span class="o">::</span><span class="n">GetLifetimeReplicatedProps</span><span class="p">(</span><span class="n">TArray</span><span class="o">&lt;</span> <span class="n">FLifetimeProperty</span> <span class="o">&gt;</span> <span class="o">&amp;</span> <span class="n">OutLifetimeProps</span><span class="p">)</span> <span class="k">const</span>
<span class="p">{</span>
	<span class="n">Super</span><span class="o">::</span><span class="n">GetLifetimeReplicatedProps</span><span class="p">(</span><span class="n">OutLifetimeProps</span><span class="p">);</span>

	<span class="n">DOREPLIFETIME</span><span class="p">(</span><span class="err">类名</span><span class="p">,</span> <span class="err">变量</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div>
<hr />

<h3 id="replicate-函数">Replicate 函数</h3>
<div class="highlight"><pre class="chroma"><code class="language-C++" data-lang="C++"><span class="n">A</span><span class="p">()</span>
<span class="p">{</span>
	<span class="p">.</span>
	<span class="p">..</span>
	<span class="p">...</span>
<span class="p">}</span>
</code></pre></div>
<ul>
<li>在.h内

<ul>
<li>新建函数ServeerA()</li>
<li>声明 Server</li>
</ul></li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-C++" data-lang="C++"><span class="n">UFUNCTION</span><span class="p">(</span><span class="n">Server</span><span class="p">,</span> <span class="n">Reliable</span><span class="p">,</span> <span class="n">WithValidation</span><span class="p">)</span>
<span class="kt">void</span> <span class="n">ServerA</span><span class="p">();</span>
</code></pre></div>
<ul>
<li>在.cpp内

<ul>
<li>加入方法ServerA_Implementation()</li>
<li>因 WithValidation 加入方法ServerA_Validate() 验证</li>
</ul></li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-C++" data-lang="C++"><span class="kt">void</span> <span class="err">类名</span><span class="o">::</span><span class="n">ServerA_Implementation</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">A</span><span class="p">();</span>
<span class="p">}</span>

<span class="kt">bool</span> <span class="err">类名</span><span class="o">::</span><span class="n">ServerA_Validate</span><span class="p">()</span>
<span class="p">{</span>
	<span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div>
<ul>
<li>在 A() 内加入</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-C++" data-lang="C++"><span class="n">A</span><span class="p">()</span>
<span class="p">{</span>
	<span class="k">if</span> <span class="p">(</span><span class="n">Role</span> <span class="o">&lt;</span> <span class="n">ROLE_Authority</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">ServerA</span><span class="p">();</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="p">.</span>
	<span class="p">..</span>
	<span class="p">...</span>
<span class="p">}</span>
</code></pre></div>
<hr />
]]></content>
		</item>
		
		<item>
			<title>CocosCreator 一个通过触摸移动和缩放目标层的组件</title>
			<link>https://zhangjie174.com/posts/cocoscreator_scaleandslide/</link>
			<pubDate>Thu, 20 Jun 2019 22:00:00 +0800</pubDate>
			
			<guid>https://zhangjie174.com/posts/cocoscreator_scaleandslide/</guid>
			<description>移动和缩放目标层 使用注意 需要新建一个相机来专门拍摄目标节点 ScaleAndSlide.js cc.Class({ extends: cc.Component, properties: { touchLayer: cc.Node, //触摸层 target: cc.Node, //移动缩放目标层 camera: cc.Camera, //渲染目标层的相机 }, onLoad: function () {</description>
			<content type="html"><![CDATA[

<h1 id="移动和缩放目标层">移动和缩放目标层</h1>

<h2 id="使用注意">使用注意</h2>

<ul>
<li>需要新建一个相机来专门拍摄目标节点</li>
</ul>

<p>ScaleAndSlide.js</p>
<div class="highlight"><pre class="chroma"><code class="language-Js" data-lang="Js"><span class="nx">cc</span><span class="p">.</span><span class="nx">Class</span><span class="p">({</span>
    <span class="k">extends</span><span class="o">:</span> <span class="nx">cc</span><span class="p">.</span><span class="nx">Component</span><span class="p">,</span>
    <span class="nx">properties</span><span class="o">:</span> <span class="p">{</span>
        <span class="nx">touchLayer</span><span class="o">:</span> <span class="nx">cc</span><span class="p">.</span><span class="nx">Node</span><span class="p">,</span> <span class="c1">//触摸层
</span><span class="c1"></span>        <span class="nx">target</span><span class="o">:</span> <span class="nx">cc</span><span class="p">.</span><span class="nx">Node</span><span class="p">,</span>     <span class="c1">//移动缩放目标层
</span><span class="c1"></span>        <span class="nx">camera</span><span class="o">:</span> <span class="nx">cc</span><span class="p">.</span><span class="nx">Camera</span><span class="p">,</span>     <span class="c1">//渲染目标层的相机
</span><span class="c1"></span>    <span class="p">},</span>

    <span class="nx">onLoad</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
        <span class="kd">let</span> <span class="nx">self</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
        <span class="c1">//设定最大缩放
</span><span class="c1"></span>        <span class="k">this</span><span class="p">.</span><span class="nx">maxZoomRatio</span> <span class="o">=</span> <span class="mf">1.2</span><span class="p">;</span>
        <span class="c1">//计算最小缩放
</span><span class="c1"></span>        <span class="k">this</span><span class="p">.</span><span class="nx">minZoomRatio</span> <span class="o">=</span> <span class="nx">cc</span><span class="p">.</span><span class="nx">view</span><span class="p">.</span><span class="nx">getVisibleSize</span><span class="p">().</span><span class="nx">width</span> <span class="o">/</span> <span class="k">this</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">cc</span><span class="p">.</span><span class="nx">view</span><span class="p">.</span><span class="nx">getVisibleSize</span><span class="p">().</span><span class="nx">height</span> <span class="o">/</span> <span class="k">this</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">height</span> <span class="o">&gt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">minZoomRatio</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="nx">minZoomRatio</span> <span class="o">=</span> <span class="nx">cc</span><span class="p">.</span><span class="nx">view</span><span class="p">.</span><span class="nx">getVisibleSize</span><span class="p">().</span><span class="nx">height</span> <span class="o">/</span> <span class="k">this</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">minZoomRatio</span> <span class="o">&gt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">maxZoomRatio</span><span class="p">)</span> <span class="k">this</span><span class="p">.</span><span class="nx">maxZoomRatio</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="c1">//默认最大视野
</span><span class="c1"></span>        <span class="nx">self</span><span class="p">.</span><span class="nx">camera</span><span class="p">.</span><span class="nx">zoomRatio</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">minZoomRatio</span><span class="p">;</span>
        <span class="nx">self</span><span class="p">.</span><span class="nx">camera</span><span class="p">.</span><span class="nx">targetX</span> <span class="o">=</span> <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span>
        <span class="nx">self</span><span class="p">.</span><span class="nx">camera</span><span class="p">.</span><span class="nx">targetY</span> <span class="o">=</span> <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">oldPos</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
        <span class="nx">self</span><span class="p">.</span><span class="nx">isMoving</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">touchLayer</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">cc</span><span class="p">.</span><span class="nx">Node</span><span class="p">.</span><span class="nx">EventType</span><span class="p">.</span><span class="nx">TOUCH_START</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">self</span><span class="p">.</span><span class="nx">isMoving</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
        <span class="p">});</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">touchLayer</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">cc</span><span class="p">.</span><span class="nx">Node</span><span class="p">.</span><span class="nx">EventType</span><span class="p">.</span><span class="nx">TOUCH_MOVE</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
            <span class="kd">let</span> <span class="nx">touches</span> <span class="o">=</span> <span class="nx">event</span><span class="p">.</span><span class="nx">getTouches</span><span class="p">();</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">touches</span><span class="p">.</span><span class="nx">length</span> <span class="o">===</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="nx">self</span><span class="p">.</span><span class="nx">isMoving</span> <span class="o">===</span> <span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
                <span class="kd">let</span> <span class="nx">touchLoc</span> <span class="o">=</span> <span class="nx">touches</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">getLocation</span><span class="p">();</span>
                <span class="c1">//根据缩放计算出最大的移动距离
</span><span class="c1"></span>                <span class="nx">self</span><span class="p">.</span><span class="nx">maxX</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">((</span><span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">width</span> <span class="o">-</span> <span class="nx">cc</span><span class="p">.</span><span class="nx">view</span><span class="p">.</span><span class="nx">getVisibleSize</span><span class="p">().</span><span class="nx">width</span> <span class="o">/</span> <span class="nx">self</span><span class="p">.</span><span class="nx">camera</span><span class="p">.</span><span class="nx">zoomRatio</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">);</span>
                <span class="nx">self</span><span class="p">.</span><span class="nx">maxY</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">((</span><span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">height</span> <span class="o">-</span> <span class="nx">cc</span><span class="p">.</span><span class="nx">view</span><span class="p">.</span><span class="nx">getVisibleSize</span><span class="p">().</span><span class="nx">height</span> <span class="o">/</span> <span class="nx">self</span><span class="p">.</span><span class="nx">camera</span><span class="p">.</span><span class="nx">zoomRatio</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">);</span>

                <span class="c1">//加上拖动距离
</span><span class="c1"></span>                <span class="kd">let</span> <span class="nx">delta</span> <span class="o">=</span> <span class="nx">event</span><span class="p">.</span><span class="nx">touch</span><span class="p">.</span><span class="nx">getDelta</span><span class="p">();</span>
                <span class="kd">let</span> <span class="nx">x</span> <span class="o">=</span> <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">x</span> <span class="o">+</span> <span class="nx">delta</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span>
                <span class="kd">let</span> <span class="nx">y</span> <span class="o">=</span> <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">y</span> <span class="o">+</span> <span class="nx">delta</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span>

                <span class="k">if</span> <span class="p">(</span><span class="nx">x</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
                    <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">x</span> <span class="o">=</span> <span class="nx">x</span> <span class="o">&gt;</span> <span class="nx">self</span><span class="p">.</span><span class="nx">maxX</span> <span class="o">?</span> <span class="nx">self</span><span class="p">.</span><span class="nx">maxX</span> <span class="o">:</span> <span class="nx">x</span><span class="p">;</span>
                <span class="k">else</span>
                    <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">x</span> <span class="o">=</span> <span class="nx">x</span> <span class="o">&lt;</span> <span class="o">-</span><span class="nx">self</span><span class="p">.</span><span class="nx">maxX</span> <span class="o">?</span> <span class="o">-</span><span class="nx">self</span><span class="p">.</span><span class="nx">maxX</span> <span class="o">:</span> <span class="nx">x</span><span class="p">;</span>
                <span class="k">if</span> <span class="p">(</span><span class="nx">y</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
                    <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">y</span> <span class="o">=</span> <span class="nx">y</span> <span class="o">&gt;</span> <span class="nx">self</span><span class="p">.</span><span class="nx">maxY</span> <span class="o">?</span> <span class="nx">self</span><span class="p">.</span><span class="nx">maxY</span> <span class="o">:</span> <span class="nx">y</span><span class="p">;</span>
                <span class="k">else</span>
                    <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">y</span> <span class="o">=</span> <span class="nx">y</span> <span class="o">&lt;</span> <span class="o">-</span><span class="nx">self</span><span class="p">.</span><span class="nx">maxY</span> <span class="o">?</span> <span class="o">-</span><span class="nx">self</span><span class="p">.</span><span class="nx">maxY</span> <span class="o">:</span> <span class="nx">y</span><span class="p">;</span>

                <span class="nx">self</span><span class="p">.</span><span class="nx">camera</span><span class="p">.</span><span class="nx">targetX</span> <span class="o">=</span> <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span>
                <span class="nx">self</span><span class="p">.</span><span class="nx">camera</span><span class="p">.</span><span class="nx">targetY</span> <span class="o">=</span> <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">touches</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;=</span> <span class="mi">2</span><span class="p">)</span> <span class="p">{</span> <span class="c1">//缩放
</span><span class="c1"></span>                <span class="kd">let</span> <span class="nx">touch1</span> <span class="o">=</span> <span class="nx">touches</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nx">touch2</span> <span class="o">=</span> <span class="nx">touches</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
                <span class="kd">let</span> <span class="nx">delta1</span> <span class="o">=</span> <span class="nx">touch1</span><span class="p">.</span><span class="nx">getDelta</span><span class="p">(),</span> <span class="nx">delta2</span> <span class="o">=</span> <span class="nx">touch2</span><span class="p">.</span><span class="nx">getDelta</span><span class="p">();</span>
                <span class="kd">let</span> <span class="nx">touchPoint1</span> <span class="o">=</span> <span class="nx">self</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">convertToNodeSpaceAR</span><span class="p">(</span><span class="nx">touch1</span><span class="p">.</span><span class="nx">getLocation</span><span class="p">());</span>
                <span class="kd">let</span> <span class="nx">touchPoint2</span> <span class="o">=</span> <span class="nx">self</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">convertToNodeSpaceAR</span><span class="p">(</span><span class="nx">touch2</span><span class="p">.</span><span class="nx">getLocation</span><span class="p">());</span>
                <span class="c1">//计算触摸点相对移动距离
</span><span class="c1"></span>                <span class="kd">let</span> <span class="nx">distance</span> <span class="o">=</span> <span class="nx">touchPoint1</span><span class="p">.</span><span class="nx">sub</span><span class="p">(</span><span class="nx">touchPoint2</span><span class="p">);</span>
                <span class="kd">let</span> <span class="nx">delta</span> <span class="o">=</span> <span class="nx">delta1</span><span class="p">.</span><span class="nx">sub</span><span class="p">(</span><span class="nx">delta2</span><span class="p">);</span>
                <span class="kd">let</span> <span class="nx">zoomRatio</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
                <span class="c1">//计算缩放
</span><span class="c1"></span>                <span class="k">if</span> <span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">distance</span><span class="p">.</span><span class="nx">x</span><span class="p">)</span> <span class="o">&gt;</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">distance</span><span class="p">.</span><span class="nx">y</span><span class="p">))</span> <span class="p">{</span>
                    <span class="nx">zoomRatio</span> <span class="o">=</span> <span class="p">(</span><span class="nx">distance</span><span class="p">.</span><span class="nx">x</span> <span class="o">+</span> <span class="nx">delta</span><span class="p">.</span><span class="nx">x</span><span class="p">)</span> <span class="o">/</span> <span class="nx">distance</span><span class="p">.</span><span class="nx">x</span> <span class="o">*</span> <span class="nx">self</span><span class="p">.</span><span class="nx">camera</span><span class="p">.</span><span class="nx">zoomRatio</span><span class="p">;</span>
                <span class="p">}</span><span class="k">else</span> <span class="p">{</span>
                    <span class="nx">zoomRatio</span> <span class="o">=</span> <span class="p">(</span><span class="nx">distance</span><span class="p">.</span><span class="nx">y</span> <span class="o">+</span> <span class="nx">delta</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span> <span class="o">/</span> <span class="nx">distance</span><span class="p">.</span><span class="nx">y</span> <span class="o">*</span> <span class="nx">self</span><span class="p">.</span><span class="nx">camera</span><span class="p">.</span><span class="nx">zoomRatio</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="nx">zoomRatio</span> <span class="o">=</span> <span class="nx">zoomRatio</span> <span class="o">&lt;</span> <span class="nx">self</span><span class="p">.</span><span class="nx">minZoomRatio</span> <span class="o">?</span> <span class="nx">self</span><span class="p">.</span><span class="nx">minZoomRatio</span> <span class="o">:</span> <span class="nx">zoomRatio</span><span class="p">;</span>
                <span class="nx">zoomRatio</span> <span class="o">=</span> <span class="nx">zoomRatio</span> <span class="o">&gt;</span> <span class="nx">self</span><span class="p">.</span><span class="nx">maxZoomRatio</span> <span class="o">?</span> <span class="nx">self</span><span class="p">.</span><span class="nx">maxZoomRatio</span> <span class="o">:</span> <span class="nx">zoomRatio</span><span class="p">;</span>
                <span class="nx">self</span><span class="p">.</span><span class="nx">camera</span><span class="p">.</span><span class="nx">zoomRatio</span> <span class="o">=</span> <span class="nx">zoomRatio</span><span class="p">;</span>
                <span class="c1">//根据缩放计算出最大的移动距离
</span><span class="c1"></span>                <span class="nx">self</span><span class="p">.</span><span class="nx">maxX</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">((</span><span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">width</span> <span class="o">-</span> <span class="nx">cc</span><span class="p">.</span><span class="nx">view</span><span class="p">.</span><span class="nx">getVisibleSize</span><span class="p">().</span><span class="nx">width</span> <span class="o">/</span> <span class="nx">self</span><span class="p">.</span><span class="nx">camera</span><span class="p">.</span><span class="nx">zoomRatio</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">);</span>
                <span class="nx">self</span><span class="p">.</span><span class="nx">maxY</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">((</span><span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">height</span> <span class="o">-</span> <span class="nx">cc</span><span class="p">.</span><span class="nx">view</span><span class="p">.</span><span class="nx">getVisibleSize</span><span class="p">().</span><span class="nx">height</span> <span class="o">/</span> <span class="nx">self</span><span class="p">.</span><span class="nx">camera</span><span class="p">.</span><span class="nx">zoomRatio</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">);</span>
                <span class="k">if</span> <span class="p">(</span><span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">x</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
                    <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">x</span> <span class="o">=</span> <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">x</span> <span class="o">&gt;</span> <span class="nx">self</span><span class="p">.</span><span class="nx">maxX</span> <span class="o">?</span> <span class="nx">self</span><span class="p">.</span><span class="nx">maxX</span> <span class="o">:</span> <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span>
                <span class="k">else</span>
                    <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">x</span> <span class="o">=</span> <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">x</span> <span class="o">&lt;</span> <span class="o">-</span><span class="nx">self</span><span class="p">.</span><span class="nx">maxX</span> <span class="o">?</span> <span class="o">-</span><span class="nx">self</span><span class="p">.</span><span class="nx">maxX</span> <span class="o">:</span> <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span>
                <span class="k">if</span> <span class="p">(</span><span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">y</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
                    <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">y</span> <span class="o">=</span> <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">y</span> <span class="o">&gt;</span> <span class="nx">self</span><span class="p">.</span><span class="nx">maxY</span> <span class="o">?</span> <span class="nx">self</span><span class="p">.</span><span class="nx">maxY</span> <span class="o">:</span> <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span>
                <span class="k">else</span>
                    <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">y</span> <span class="o">=</span> <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">y</span> <span class="o">&lt;</span> <span class="o">-</span><span class="nx">self</span><span class="p">.</span><span class="nx">maxY</span> <span class="o">?</span> <span class="o">-</span><span class="nx">self</span><span class="p">.</span><span class="nx">maxY</span> <span class="o">:</span> <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span>
                <span class="nx">self</span><span class="p">.</span><span class="nx">camera</span><span class="p">.</span><span class="nx">targetX</span> <span class="o">=</span> <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span>
                <span class="nx">self</span><span class="p">.</span><span class="nx">camera</span><span class="p">.</span><span class="nx">targetY</span> <span class="o">=</span> <span class="nx">self</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">});</span>
        <span class="nx">self</span><span class="p">.</span><span class="nx">touchLayer</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">cc</span><span class="p">.</span><span class="nx">Node</span><span class="p">.</span><span class="nx">EventType</span><span class="p">.</span><span class="nx">TOUCH_END</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">self</span><span class="p">.</span><span class="nx">isMoving</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
        <span class="p">});</span>
    <span class="p">}</span>
<span class="p">});</span>
</code></pre></div>]]></content>
		</item>
		
		<item>
			<title>CocosCreator Layout即时更新布局</title>
			<link>https://zhangjie174.com/posts/laouut-update/</link>
			<pubDate>Thu, 13 Jun 2019 01:00:00 +0800</pubDate>
			
			<guid>https://zhangjie174.com/posts/laouut-update/</guid>
			<description>Layout 即时更新布局 updateLayout() 立即执行更新布局 的方法 如果存在多层 Layout 嵌套的情况 需要从最里层 layout 依次调用 updateLayout() &amp;gt;&amp;hellip;(Layout) &amp;gt;&amp;gt;A(Layout) &amp;gt;&amp;gt;&amp;gt;B(Layout) B.updateLayout() A.updateLayout() ....updateLayout() 当在使用节点的 zIndex 属性给 Layout 的子节点排序时。 在</description>
			<content type="html"><![CDATA[

<h1 id="layout-即时更新布局">Layout 即时更新布局</h1>

<ul>
<li>updateLayout() 立即执行更新布局 的方法</li>

<li><p>如果存在多层 Layout 嵌套的情况 需要从最里层 layout 依次调用 updateLayout()
&gt;&hellip;(Layout)
&gt;&gt;A(Layout)
&gt;&gt;&gt;B(Layout)</p>

<pre><code>B.updateLayout()
A.updateLayout()
....updateLayout()
</code></pre></li>

<li><p>当在使用节点的 zIndex 属性给 Layout 的子节点排序时。
在新加入一个子节点马上调用 updateLayout() ，会发现并没有达到效果。
这时我们需要先调用Node.sortAllChildren() (根据子节点的 zIndex 和 arrivalOrder 进行排序，正常情况下开发者不需要手动调用这个函数)
&gt;A(Layout)
&gt;&gt;B(Node)</p>

<pre><code># C.parent = A.node
A.node.sortAllChildren()
A.updateLayout()
</code></pre></li>
</ul>
]]></content>
		</item>
		
		<item>
			<title>win10 安装Scoop、Hugo、Go等环境</title>
			<link>https://zhangjie174.com/posts/install-hugo-go/</link>
			<pubDate>Wed, 12 Jun 2019 13:22:33 +0800</pubDate>
			
			<guid>https://zhangjie174.com/posts/install-hugo-go/</guid>
			<description>安装Scoop(Scoop Windows 的命令行安装程序管理工具) scoop安装教程 # 查看powershell版本 必须使用powershell3.0以上</description>
			<content type="html"><![CDATA[

<h1 id="安装scoop-scoop-windows-的命令行安装程序管理工具">安装Scoop(Scoop Windows 的命令行安装程序管理工具)</h1>

<p><a href="https://www.cnblogs.com/CyLee/p/7197551.html">scoop安装教程</a></p>

<pre><code>     # 查看powershell版本 必须使用powershell3.0以上
     # 如果是3.0以下，需要升级才可以使用，如何升级？先安装好Microsoft .NET Framework 4.5，再安装Windows Management Framework 4.0 然后重启即可 
     $PSVersionTable.PSVersion
     
     # 第一步，打开powershell3.0+，输入以下代码，选择A【全是】
     set-executionpolicy remotesigned -s cu
     
     # 上面成功之后，进入第二步
     iex (new-object net.webclient).downloadstring('https://get.scoop.sh')
     
     # 重启powerShell
</code></pre>

<h1 id="安装go">安装Go</h1>

<ul>
<li><a href="https://golang.google.cn/dl/">Go下载地址</a></li>
</ul>

<h1 id="安装hugo">安装Hugo</h1>

<pre><code>    scoop install hugo
</code></pre>

<pre><code>    mkdir $HOME/src
    cd $HOME/src
    git clone https://github.com/gohugoio/hugo.git
    cd hugo
    go install --tags extended
</code></pre>
]]></content>
		</item>
		
	</channel>
</rss>
